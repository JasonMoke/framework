<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	<!-- cache - 配置给定命名空间的缓存。  -->
	<!-- cache-ref – 从其他命名空间引用缓存配置。  -->
	<!-- resultMap – 最复杂，也是最有力量的元素，用来描述如何从数据库结果集中来加载你的对象。 -->
	<!-- parameterMap – 已经被废弃了！老式风格的参数映射。内联参数是首选，这个元素可能在将来被移除。这里不会记录。 -->
	<!-- sql – 可以重用的SQL块，也可以被其他语句引用。 -->
	<!-- insert – 映射插入语句 -->
	<!-- update – 映射更新语句 -->
	<!-- delete – 映射删除语句 -->
	<!-- select – 映射查询语句 -->


	<!-- select元素： -->
	<!-- 1）parameterType：参数类型 -->
	<!-- 2）resultType：从这条语句中返回的期望类型的类的完全限定名或别名。注意集合情形，那应该是集合可以包含的类型，而不能是集合本身。使用resultType或resultMap，但不能同时使用。 -->
	<!-- 3）resultMap：命名引用外部的resultMap。返回map是MyBatis最具力量的特性，对其有一个很好的理解的话，许多复杂映射的情形就能被解决了。使用resultMap或resultType，但不能同时使用。 -->
	<!-- 4）flushCache：是否清空缓存，默认false,不清空，如果为true每次查询都会清空缓存。 -->
	<!-- 5）useCache：将其设置为true，将会导致本条语句的结果被缓存。默认值：true。 -->
	<!-- 6）fetchSize：这是暗示驱动程序每次批量返回的结果行数。默认不设置（驱动自行处理）。 -->
	<!-- 7）statementType：STATEMENT,PREPARED或CALLABLE的一种。这会让MyBatis使用选择使用Statement，PreparedStatement或CallableStatement。默认值：PREPARED。 -->
	<!-- 8）resultSetType：FORWARD_ONLY|SCROLL_SENSITIVE|SCROLL_INSENSITIVE中的一种。默认是不设置（驱动自行处理）。 -->
	<select id="detailUser" parameterType="java.lang.String"
		resultType="UserInfoAndDataManager">
        <![CDATA[ 
            SELECT 
             *
            FROM USERDATAMANAGER
            WHERE USERID = #{userId} 
        ]]>
	</select>
	<select id="getUserInfoForLogin" parameterType="java.lang.String"
		resultType="UserInfoManager">
        <![CDATA[ 
            SELECT 
             *
            FROM USERINFOMANAGER 
            WHERE USERNAME = #{username} 
            AND USERPWD = #{password} 
        ]]>
	</select>
	<select id="getUserInfoForValidate" resultType="int">
		SELECT
		COUNT( *)
		FROM USERINFOMANAGER
		WHERE USERNAME = #{UserName,jdbcType=VARCHAR}
		<if test="UserId !=null and UserId !='' ">
			and USERID != #{UserId,jdbcType=VARCHAR}
		</if>
		AND STATUS !=99
	</select>
	<select id="getUserInfoForUpdatePwd" parameterType="java.lang.String"
		resultType="int">
        <![CDATA[ 
            SELECT 
            COUNT( *)
            FROM USERINFOMANAGER 
            WHERE USERID = #{UserId} 
            AND USERPWD = #{UserPwd} 
            AND STATUS !=99
        ]]>
	</select>
	<select id="getUserInfoForValidatePwd" parameterType="java.lang.String"
		resultType="int">
        <![CDATA[ 
            SELECT 
            COUNT( *)
            FROM USERINFOMANAGER 
            WHERE USERNAME = #{UserName} 
            AND USERPWD = #{UserPwd} 
            AND STATUS !=99
        ]]>
	</select>
	<select id="getUserInfoForValidateUserStatus" parameterType="java.lang.String"
		resultType="int">
        <![CDATA[ 
            SELECT 
            COUNT( *)
            FROM USERINFOMANAGER 
            WHERE USERNAME = #{UserName} 
            AND USERPWD = #{UserPwd} 
            AND STATUS =1
        ]]>
	</select>
	<select id="getUserDataByUserId" parameterType="java.lang.String"
		resultType="UserDataManager">
        <![CDATA[ 
            SELECT 
             *
            FROM USERDATAMANAGER 
            WHERE USERID = #{userId} 
        ]]>
	</select>
	<select id="getUserInfoByUserId" parameterType="java.lang.String"
		resultType="UserInfoManager">
        <![CDATA[ 
            SELECT 
             *
            FROM USERINFOMANAGER 
            WHERE USERID = #{userId} 
        ]]>
	</select>

	<select id="getAllUser" resultType="UserInfoManager">
        <![CDATA[ 
            SELECT 
             *
            FROM USERINFOMANAGER I
            WHERE
            I.STATUS != '99' 
        ]]>
	</select>
	<select id="getAllUserList" resultType="UserInfoAndDataManager">
	   SELECT * FROM (	
	   	SELECT row_.*, ROWNUM rownum_ FROM (	
			SELECT a.*,nvl(a.ACCOUNTNAME,b.USERNAME) as ACCOUNT 
			FROM USERDATAMANAGER a left join USERINFOMANAGER b on (b.USERID=a.USERID)
		<![CDATA[ 
            ) row_ where rownum <= #{end} ) 
            where rownum_ >= #{start} AND STATUS !='99'
		]]>
	</select>
	
	<select id="getUserListByOrganId" resultType="UserInfoAndDataManager">
	   SELECT * FROM (	
	   	SELECT row_.*, ROWNUM rownum_ FROM (	
			SELECT a.*,nvl(a.ACCOUNTNAME,b.USERNAME) as ACCOUNT 
			FROM USERDATAMANAGER a left join USERINFOMANAGER b on (b.USERID=a.USERID) 
		    WHERE ORGANID=#{OrganId,jdbcType=VARCHAR}
		<![CDATA[ 
            ) row_ where rownum <= #{end} ) 
            where rownum_ >= #{start} AND STATUS !='99'
		]]>
	</select>
	
	<!-- 按照fullname username status进行查询  -->
	<select id="getUserByCondition" resultType="UserInfoAndDataManager">
	   SELECT
			i.USERNAME as ACCOUNT,
			D .*
		FROM
			USERDATAMANAGER D
		LEFT JOIN USERINFOMANAGER i ON D .USERID = i.USERID
		WHERE 1=1
		 <if test="UserName !=null and UserName !=''">
			AND i.USERNAME = #{UserName}
		 </if>
		 <if test="FullName !=null and FullName !=''">
			AND D .FULLNAME = #{FullName}
		 </if>
		 <if test="Stauts !=null and Stauts !=''">
			AND D .STATUS = #{Stauts}
		 </if>
	</select>
	
	<update id="updateUserInfoStatus">
		UPDATE USERINFOMANAGER SET
		UPDATETIME=#{UpdateTime},
		UPDATEPERSON=#{UpdatePerson},
		STATUS=#{Status}
		WHERE USERID IN
		<foreach item="item" index="index" collection="userIds" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	
			
	<update id="updateUserDataStatus">
		UPDATE USERDATAMANAGER SET
		UPDATETIME=#{UpdateTime},
		UPDATEPERSON=#{UpdatePerson},
		STATUS=#{Status}
		WHERE USERID IN
		<foreach item="item" index="index" collection="userIds" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<update id="updateUserInfo" parameterType="UserInfoManager">
        <![CDATA[ 
            UPDATE USERINFOMANAGER SET 
             USERNAME=#{UserName,jdbcType=VARCHAR}, 
             USERPWD=#{UserPwd,jdbcType=VARCHAR},
             USERKEY=#{UserKey,jdbcType=VARCHAR},
             STATUS=#{Status,jdbcType=VARCHAR},
             UPDATETIME=#{UpdateTime,jdbcType=DATE},
             UPDATEPERSON=#{UpdatePerson,jdbcType=VARCHAR}
            WHERE USERID = #{UserId} 
        ]]>
	</update>
	<update id="updateUserPwd" parameterType="UserInfoManager">
        <![CDATA[ 
            UPDATE USERINFOMANAGER SET 
             USERPWD=#{UserPwd},
             UPDATETIME=#{UpdateTime},
             UPDATEPERSON=#{UpdatePerson}
            WHERE USERID = #{UserId} 
        ]]>
	</update>
	<update id="changeUserInfoStatus" parameterType="UserInfoManager">
        <![CDATA[ 
            UPDATE USERINFOMANAGER SET 
             STATUS=#{Status},
             UPDATETIME=#{UpdateTime},
             UPDATEPERSON=#{UpdatePerson}
            WHERE USERID = #{UserId} 
        ]]>
	</update>
	
	<update id="changeUserDataStatus" parameterType="UserInfoManager">
        <![CDATA[ 
            UPDATE USERDATAMANAGER SET 
             STATUS=#{Status},
             UPDATETIME=#{UpdateTime},
             UPDATEPERSON=#{UpdatePerson}
            WHERE USERID = #{UserId} 
        ]]>
	</update>
	
	<update id="updateUserData" parameterType="UserDataManager">
             UPDATE USERDATAMANAGER SET 
             USERID=#{UserId},
             <if test="FullName !=null">
             FULLNAME=#{FullName},
             </if>
             <if test="ContactPhone !=null">
             CONTACTPHONE=#{ContactPhone},
             </if>
             <if test="OfficePhone !=null">
             OFFICEPHONE=#{OfficePhone},
             </if>
             <if test="FaxNumber !=null">
             FAXNUMBER=#{FaxNumber},
             </if>
             <if test="EmailAddress !=null">
              EMAILADDRESS=#{EmailAddress},
             </if>
             <if test="ContactAddress !=null">
              CONTACTADDRESS=#{ContactAddress},
             </if>
             <if test="ZipCode !=null">
             ZIPCODE=#{ZipCode},
             </if>
             <if test="OrganId !=null">
               ORGANID=#{OrganId},
             </if>
             <if test="DetpId !=null">
             DETPID=#{DetpId},
             </if>
             <if test="UserLogo !=null">
             USERLOGO=#{UserLogo},
             </if>
             <if test="UserRemark !=null">
              USERREMARK=#{UserRemark},
             </if>
             <if test="Status !=null">
             STATUS=#{Status},
             </if>
             <if test="EnName !=null">
              ENNAME=#{EnName},
             </if>
             <if test="PersonCode !=null">
             PERSONCODE=#{PersonCode},
             </if>
             <if test="FirstName !=null">
             FIRSTNAME=#{FirstName},
             </if>
             <if test="LastName !=null">
             LASTNAME=#{LastName},
             </if>
             <if test="CnameShortSpell !=null">
             CNAMESHORTSPELL=#{CnameShortSpell},
             </if>
             <if test="CnameFullSpell !=null">
             CNAMEFULLSPELL=#{CnameFullSpell},
             </if>
             <if test="CardNum !=null">
             CARDNUM=#{CardNum},
             </if>
             <if test="CardCode !=null">
             CARDCODE=#{CardCode},
             </if>
             <if test="Sex !=null">
             SEX=#{Sex},
             </if>
             <if test="Birthday !=null">
             BIRTHDAY=#{Birthday},
             </if>
             <if test="MarryCode !=null">
             MARRYCODE=#{MarryCode},
             </if>
             <if test="PoliticCode !=null">
             POLITICCODE=#{PoliticCode},
             </if>
             <if test="DegreeCode !=null">
             DEGREECODE=#{DegreeCode},
             </if>
             <if test="EduCode !=null">
             EDUCODE=#{EduCode},
             </if>
             <if test="PostLevel !=null">
             POSTLEVEL=#{PostLevel},
             </if>
             <if test="HomeTel !=null">
             HOMETEL=#{HomeTel},
             </if>
             <if test="HomeFax !=null">
             HOMEFAX=#{HomeFax},
             </if>
             <if test="MSN !=null">
             MSN=#{MSN},
             </if>
             <if test="QQ !=null">
             QQ=#{QQ},
             </if>
             <if test="HomePage !=null">
             HOMEPAGE=#{HomePage},
             </if>
             <if test="IsImpContact !=null">
             ISIMPCONTACT=#{IsImpContact},
             </if>
             <if test="NativePiace !=null">
             NATIVEPIACE=#{NativePiace},
             </if>
             <if test="Country !=null">
             COUNTRY=#{Country},
             </if>
             <if test="ProvinceId !=null">
             PROVINCEID=#{ProvinceId},
             </if>
             <if test="CityId !=null">
             CITYID=#{CityId},
             </if>
             <if test="SeqNum !=null">
             SEQNUM=#{SeqNum},
             </if>
             <if test="RoomNum !=null">
             ROOMNUM=#{RoomNum},
             </if>
             <if test="SecurityLevel !=null">
              SECURITYLEVEL=#{SecurityLevel},
             </if>
             <if test="OtherInfo !=null">
             OTHERINFO=#{OtherInfo},
             </if>
             <if test="Signature !=null">
             SIGNATURE=#{Signature},
             </if>
             <if test="SignatureFileId !=null">
             SIGNATUREFILEID=#{SignatureFileId},
             </if>
             UPDATEPERSON=#{UpdatePerson},
             UPDATETIME=#{UpdateTime}
        WHERE 
            USERID=#{UserId}
	</update>

	<!-- insert 元素： -->
	<!-- 1）useGeneratedKeys：这会告诉MyBatis使用JDBC的getGeneratedKeys方法来取出由数据（比如：像MySQL和SQL 
		Server这样的数据库管理系统的自动递增字段）内部生成的主键。默认值：false。 -->
	<!-- 2）keyProperty：标记一个属性（自动生成的那个属性，比如主键id），MyBatis会通过getGeneratedKeys或者通过insert语句的selectKey子元素设置它的值。默认：不设置。 -->
	<insert id="insertUserInfo" parameterType="UserInfoManager">
		 INSERT INTO USERINFOMANAGER 
        (
            USERID,USERNAME,USERPWD,USERKEY,STATUS,
            CREATEPERSON,CREATETIME,UPDATEPERSON,UPDATETIME
        ) 
        VALUES 
        (
         #{UserId,jdbcType=VARCHAR},#{UserName,jdbcType=VARCHAR},#{UserPwd,jdbcType=VARCHAR},#{UserKey,jdbcType=VARCHAR},#{Status,jdbcType=VARCHAR},
         #{CreatePerson,jdbcType=VARCHAR},#{CreateTime,jdbcType=DATE},#{UpdatePerson,jdbcType=VARCHAR},#{UpdateTime,jdbcType=DATE}
        )
		
	</insert>
	<insert id="insertUserData" parameterType="UserDataManager">
		INSERT INTO USERDATAMANAGER
		(
			USERID,FULLNAME,CONTACTPHONE,OFFICEPHONE,FAXNUMBER,EMAILADDRESS,CONTACTADDRESS,ZIPCODE,ORGANID,
			DETPID,USERLOGO,USERREMARK,STATUS,CREATEPERSON,CREATETIME,UPDATEPERSON,UPDATETIME,ENNAME,PERSONCODE,
			FIRSTNAME,LASTNAME,CNAMESHORTSPELL,CNAMEFULLSPELL,CARDNUM,CARDCODE,SEX,BIRTHDAY,NATION,MARRYCODE,
			POLITICCODE,DEGREECODE,EDUCODE,POSTLEVEL,HOMETEL,HOMEFAX,MSN,QQ,HOMEPAGE,ISIMPCONTACT,NATIVEPIACE,
			COUNTRY,PROVINCEID,CITYID,SEQNUM,ROOMNUM,SECURITYLEVEL,OTHERINFO,SIGNATURE,SIGNATUREFILEID
		)
		VALUES
		(
			#{UserId,jdbcType=VARCHAR},#{FullName,jdbcType=VARCHAR},#{ContactPhone,jdbcType=VARCHAR},#{OfficePhone,jdbcType=VARCHAR},#{FaxNumber,jdbcType=VARCHAR},#{EmailAddress,jdbcType=VARCHAR},#{ContactAddress,jdbcType=VARCHAR},
			#{ZipCode,jdbcType=VARCHAR},#{OrganId,jdbcType=VARCHAR},#{DetpId,jdbcType=VARCHAR},#{UserLogo,jdbcType=BLOB},#{UserRemark,jdbcType=VARCHAR},#{Status,jdbcType=VARCHAR},#{CreatePerson,jdbcType=VARCHAR},#{CreateTime,jdbcType=DATE},
			#{UpdatePerson,jdbcType=VARCHAR},#{UpdateTime,jdbcType=DATE},#{EnName,jdbcType=VARCHAR},#{PersonCode,jdbcType=VARCHAR},#{FirstName,jdbcType=VARCHAR},#{LastName,jdbcType=VARCHAR},#{CnameShortSpell,jdbcType=VARCHAR},
			#{CnameFullSpell,jdbcType=VARCHAR},#{CardNum,jdbcType=VARCHAR},#{CardCode,jdbcType=VARCHAR},#{Sex,jdbcType=VARCHAR},#{Birthday,jdbcType=DATE},#{Nation,jdbcType=VARCHAR},#{MarryCode,jdbcType=VARCHAR},#{PoliticCode,jdbcType=VARCHAR},
			#{DegreeCode,jdbcType=VARCHAR},#{EduCode,jdbcType=VARCHAR},#{PostLevel,jdbcType=VARCHAR},#{HomeTel,jdbcType=VARCHAR},#{HomeFax,jdbcType=VARCHAR},#{MSN,jdbcType=VARCHAR},#{QQ,jdbcType=VARCHAR},#{HomePage,jdbcType=VARCHAR},#{IsImpContact,jdbcType=VARCHAR},
			#{NativePiace,jdbcType=VARCHAR},#{Country,jdbcType=VARCHAR},#{ProvinceId,jdbcType=VARCHAR},#{CityId,jdbcType=VARCHAR},#{SeqNum,jdbcType=VARCHAR},#{RoomNum,jdbcType=VARCHAR},#{SecurityLevel,jdbcType=VARCHAR},#{OtherInfo,jdbcType=VARCHAR},
			#{Signature,jdbcType=VARCHAR},#{SignatureFileId,jdbcType=VARCHAR}
		)
	</insert>

	<delete id="deleteUser" parameterType="java.lang.String">
		delete from USER where ID=#{id}
	</delete>
	
</mapper>
