<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">
	
	
	<bean id="chainDefinitionSectionMetaSource" class="com.core.shiro.ChainDefinitionSectionMetaSource">  
	    <property name="filterChainDefinitions">  
	        <value>  
	            /loginAction/logout.action = logout
				/login.jsp = anon
				/loginAction/changeLanguageLogin.action = anon
				/loginAction/logout.action = anon
				/*.action = authc 
	        </value>  
	    </property>  
	</bean> 
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/loginAction/checked.action" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- shiro连接约束配置,在这里使用自定义的动态获取资源类 -->  
    	<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
		<!-- <property name="filterChainDefinitions">
			<value>
				/loginAction/logout.action = logout
				/login.jsp = anon
				/loginAction/changeLanguageLogin.action = anon
				/loginAction/logout.action = anon
				/*.action = authc 
				/user*/** = authc,perms["user"]
				/organ*/** = perms["organ"]
				/logmanager*/** = perms["logmanager"]
				/dict*/** = perms["dict"]
				/role/*insert*.action = perms["role:insert"]
				/role*/** = authc,perms["role"]
			</value>
		</property> -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authenticationFilter" /> 
				<!-- <entry key="authc" value-ref="formAuthenticationFilter" /> -->
			</map>
		</property>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authenticationRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
	</bean>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">  
            <property name="proxyTargetClass" value="true" />   
    </bean> 
    
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<bean id="authenticationRealm" class="com.core.shiro.AuthenticationRealm">
		<property name="authorizationCacheName" value="authorization" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean>  

	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>

	<bean id="authenticationFilter" class="com.core.filter.AuthenticationFilter" />
	
	<!-- <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/> -->
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
    <!-- <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>
    
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"></bean> -->
	
</beans>