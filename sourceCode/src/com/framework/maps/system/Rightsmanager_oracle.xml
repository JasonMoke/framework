<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- -->
<mapper namespace="com.framework.maps.Rightsmanager">

	<!-- insert 元素：添加一条记录 -->
	<insert id="add" parameterType="Rightsmanager">
		INSERT INTO RIGHTSMANAGER
		(
		RIGHTSID,
		ROLENAME,
		MODULEID,
		STATUS,
        CREATEPERSON,
        CREATETIME,
        UPDATEPERSON,
        UPDATETIME
		)
		VALUES
		(
		#{RightsId},
		#{RoleName},
		#{ModuleId},
		#{Status},
		#{CreatePerson},
		#{CreateTime},
		#{UpdatePerson},
		#{UpdateTime}
		)
	</insert>

	<!-- insert 元素：添加多条记录 -->
	<insert id="addList" parameterType="Rightsmanager">
		
		INSERT INTO RIGHTSMANAGER
		(
		RIGHTSID,
		ROLENAME,
		MODULEID,
		STATUS,
        CREATEPERSON,
        CREATETIME,
        UPDATEPERSON,
        UPDATETIME
		)
		<foreach collection="list" item="lt" index="index" separator="UNION">
			SELECT 
			#{lt.RightsId,jdbcType=VARCHAR},
			#{lt.RoleName,jdbcType=VARCHAR},
			#{lt.ModuleId,jdbcType=VARCHAR},
			#{lt.Status,jdbcType=NUMERIC},
			#{lt.CreatePerson,jdbcType=VARCHAR},
			#{lt.CreateTime,jdbcType=DATE},
			#{lt.UpdatePerson,jdbcType=VARCHAR},
			#{lt.UpdateTime,jdbcType=DATE}
			FROM DUAL
		</foreach>
	</insert>

	<!-- update 元素：更新一条记录 -->
	<update id="update" parameterType="Rightsmanager">
		UPDATE RIGHTSMANAGER SET
		ROLENAME=#{RoleName},
		MODULEID=#{ModuleId},
		STATUS=#{Status},
		CREATEPERSON=#{CreatePerson},
		CREATETIME=#{CreateTime},
		UPDATEPERSON=#{UpdatePerson},
		UPDATETIME=#{UpdateTime}
		WHERE
		RIGHTSID=#{RightsId}
	</update>

	<!-- update 元素：更新状态 -->
	<update id="updateStatus" parameterType="Rightsmanager">
		UPDATE RIGHTSMANAGER SET
		STATUS=#{Status},
		UPDATEPERSON=#{UpdatePerson},
		UPDATETIME=#{UpdateTime}
		WHERE
		RIGHTSID=#{RightsId}
	</update>

	<!-- update 元素：更新多条记录 -->
	<update id="updateStatusByIds" parameterType="java.util.Map">
		UPDATE RIGHTSMANAGER SET
		STATUS=#{Status},
		UPDATEPERSON=#{UpdatePerson},
		UPDATETIME=#{UpdateTime}
		WHERE
		RIGHTSID IN
		<foreach item="item" index="index" collection="ids" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<!-- delete 元素：根据主键删除一条记录 -->
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM RIGHTSMANAGER
		WHERE
		RIGHTSID=#{RightsId}
	</delete>

	<delete id="deleteBynMame" parameterType="java.lang.String">
		DELETE FROM RIGHTSMANAGER
		WHERE
		ROLENAME=#{RoleName}
	</delete>
	<!-- update 元素：逻辑删除一条记录 -->
	<update id="deleteByLogic" parameterType="java.lang.String">
		UPDATE RIGHTSMANAGER SET
		STATUS=99,
		UPDATEPERSON=#{UpdatePerson},
		UPDATETIME=#{UpdateTime}
		WHERE
		RIGHTSID=#{RightsId}
	</update>

	<!-- update 元素：逻辑删除多条记录 -->
	<update id="deleteBatch" parameterType="java.util.Map">
		UPDATE RIGHTSMANAGER SET
		STATUS=99,
		UPDATEPERSON=#{UpdatePerson},
		UPDATETIME=#{UpdateTime}
		WHERE
		RIGHTSID IN
		<foreach item="item" index="index" collection="ids" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<!-- select 元素：查询所有的记录 -->
	<select id="findAll" resultType="Rightsmanager">
		SELECT * FROM RIGHTSMANAGER
		WHERE
		STATUS!=99
	</select>

	<!-- select 元素：根据主键获取数据 -->
	<select id="findById" resultType="Rightsmanager">
		SELECT * FROM RIGHTSMANAGER
		WHERE
		RIGHTSID=#{RightsId}
		AND STATUS!=99
	</select>

	<!-- select 元素：获取记录条数 -->
	<select id="count">
		SELECT COUNT(*) FROM RIGHTSMANAGER
		WHERE
		RIGHTSID=#{RightsId}
		AND STATUS!=99
	</select>
</mapper>
